{"uid":"e49abc48912d7c01","name":"test_result_selected_checkbox","fullName":"tests.test_live.TestLiveCodePage#test_result_selected_checkbox","historyId":"12d8e5a6f6ef0cc9c2b931edbce093ff","time":{"start":1696752482037,"stop":1696752485642,"duration":3605},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h5>...</h5> is not clickable at point (198, 588). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://287cfdd9f8423693b960cf9672f1347f.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" role=\"region\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x563cf13a36b3 <unknown>\n#1 0x563cf10791e7 <unknown>\n#2 0x563cf10c665d <unknown>\n#3 0x563cf10c49fd <unknown>\n#4 0x563cf10c27b8 <unknown>\n#5 0x563cf10c1827 <unknown>\n#6 0x563cf10b64f9 <unknown>\n#7 0x563cf10e20c2 <unknown>\n#8 0x563cf10b5f16 <unknown>\n#9 0x563cf10e228e <unknown>\n#10 0x563cf10fb322 <unknown>\n#11 0x563cf10e1e93 <unknown>\n#12 0x563cf10b4934 <unknown>\n#13 0x563cf10b571e <unknown>\n#14 0x563cf1368cb8 <unknown>\n#15 0x563cf136cbf0 <unknown>\n#16 0x563cf137719c <unknown>\n#17 0x563cf136d808 <unknown>\n#18 0x563cf133a27f <unknown>\n#19 0x563cf1391e88 <unknown>\n#20 0x563cf1392059 <unknown>\n#21 0x563cf13a2843 <unknown>\n#22 0x7fd75d894b43 <unknown>","statusTrace":"self = <test_live.TestLiveCode.TestLiveCodePage object at 0x7f9eb6c65f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef4c8f5b7ac89ba4ebd0bd214e656812\")>\n\n    @allure.step('Test result selected checkbox')\n    def test_result_selected_checkbox(self, driver):\n        test_page = LiveCodePage(driver, 'https://demoqa.com/')\n        test_page.open()\n>       result = test_page.checked_checkbox()\n\ntests/test_live.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/page_live_code.py:14: in checked_checkbox\n    self.element_is_visible(self.locators.ELEMENTS).click()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9eb6c67700>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563cf1392059 \\\\u003Cunknown>\\\\n#21 0x563cf13a2843 \\\\u003Cunknown>\\\\n#22 0x7fd75d894b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h5>...</h5> is not clickable at point (198, 588). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://287cfdd9f8423693b960cf9672f1347f.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" role=\"region\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\nE         (Session info: headless chrome=117.0.5938.132)\nE       Stacktrace:\nE       #0 0x563cf13a36b3 <unknown>\nE       #1 0x563cf10791e7 <unknown>\nE       #2 0x563cf10c665d <unknown>\nE       #3 0x563cf10c49fd <unknown>\nE       #4 0x563cf10c27b8 <unknown>\nE       #5 0x563cf10c1827 <unknown>\nE       #6 0x563cf10b64f9 <unknown>\nE       #7 0x563cf10e20c2 <unknown>\nE       #8 0x563cf10b5f16 <unknown>\nE       #9 0x563cf10e228e <unknown>\nE       #10 0x563cf10fb322 <unknown>\nE       #11 0x563cf10e1e93 <unknown>\nE       #12 0x563cf10b4934 <unknown>\nE       #13 0x563cf10b571e <unknown>\nE       #14 0x563cf1368cb8 <unknown>\nE       #15 0x563cf136cbf0 <unknown>\nE       #16 0x563cf137719c <unknown>\nE       #17 0x563cf136d808 <unknown>\nE       #18 0x563cf133a27f <unknown>\nE       #19 0x563cf1391e88 <unknown>\nE       #20 0x563cf1392059 <unknown>\nE       #21 0x563cf13a2843 <unknown>\nE       #22 0x7fd75d894b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1696752476083,"stop":1696752482036,"duration":5953},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h5>...</h5> is not clickable at point (198, 588). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://287cfdd9f8423693b960cf9672f1347f.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" role=\"region\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x563cf13a36b3 <unknown>\n#1 0x563cf10791e7 <unknown>\n#2 0x563cf10c665d <unknown>\n#3 0x563cf10c49fd <unknown>\n#4 0x563cf10c27b8 <unknown>\n#5 0x563cf10c1827 <unknown>\n#6 0x563cf10b64f9 <unknown>\n#7 0x563cf10e20c2 <unknown>\n#8 0x563cf10b5f16 <unknown>\n#9 0x563cf10e228e <unknown>\n#10 0x563cf10fb322 <unknown>\n#11 0x563cf10e1e93 <unknown>\n#12 0x563cf10b4934 <unknown>\n#13 0x563cf10b571e <unknown>\n#14 0x563cf1368cb8 <unknown>\n#15 0x563cf136cbf0 <unknown>\n#16 0x563cf137719c <unknown>\n#17 0x563cf136d808 <unknown>\n#18 0x563cf133a27f <unknown>\n#19 0x563cf1391e88 <unknown>\n#20 0x563cf1392059 <unknown>\n#21 0x563cf13a2843 <unknown>\n#22 0x7fd75d894b43 <unknown>","statusTrace":"self = <test_live.TestLiveCode.TestLiveCodePage object at 0x7f9eb6c65f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef4c8f5b7ac89ba4ebd0bd214e656812\")>\n\n    @allure.step('Test result selected checkbox')\n    def test_result_selected_checkbox(self, driver):\n        test_page = LiveCodePage(driver, 'https://demoqa.com/')\n        test_page.open()\n>       result = test_page.checked_checkbox()\n\ntests/test_live.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/page_live_code.py:14: in checked_checkbox\n    self.element_is_visible(self.locators.ELEMENTS).click()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9eb6c67700>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563cf1392059 \\\\u003Cunknown>\\\\n#21 0x563cf13a2843 \\\\u003Cunknown>\\\\n#22 0x7fd75d894b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h5>...</h5> is not clickable at point (198, 588). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://287cfdd9f8423693b960cf9672f1347f.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" role=\"region\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\nE         (Session info: headless chrome=117.0.5938.132)\nE       Stacktrace:\nE       #0 0x563cf13a36b3 <unknown>\nE       #1 0x563cf10791e7 <unknown>\nE       #2 0x563cf10c665d <unknown>\nE       #3 0x563cf10c49fd <unknown>\nE       #4 0x563cf10c27b8 <unknown>\nE       #5 0x563cf10c1827 <unknown>\nE       #6 0x563cf10b64f9 <unknown>\nE       #7 0x563cf10e20c2 <unknown>\nE       #8 0x563cf10b5f16 <unknown>\nE       #9 0x563cf10e228e <unknown>\nE       #10 0x563cf10fb322 <unknown>\nE       #11 0x563cf10e1e93 <unknown>\nE       #12 0x563cf10b4934 <unknown>\nE       #13 0x563cf10b571e <unknown>\nE       #14 0x563cf1368cb8 <unknown>\nE       #15 0x563cf136cbf0 <unknown>\nE       #16 0x563cf137719c <unknown>\nE       #17 0x563cf136d808 <unknown>\nE       #18 0x563cf133a27f <unknown>\nE       #19 0x563cf1391e88 <unknown>\nE       #20 0x563cf1392059 <unknown>\nE       #21 0x563cf13a2843 <unknown>\nE       #22 0x7fd75d894b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Test result selected checkbox","time":{"start":1696752482037,"stop":1696752485641,"duration":3604},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h5>...</h5> is not clickable at point (198, 588). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://287cfdd9f8423693b960cf9672f1347f.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" role=\"region\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x563cf13a36b3 <unknown>\n#1 0x563cf10791e7 <unknown>\n#2 0x563cf10c665d <unknown>\n#3 0x563cf10c49fd <unknown>\n#4 0x563cf10c27b8 <unknown>\n#5 0x563cf10c1827 <unknown>\n#6 0x563cf10b64f9 <unknown>\n#7 0x563cf10e20c2 <unknown>\n#8 0x563cf10b5f16 <unknown>\n#9 0x563cf10e228e <unknown>\n#10 0x563cf10fb322 <unknown>\n#11 0x563cf10e1e93 <unknown>\n#12 0x563cf10b4934 <unknown>\n#13 0x563cf10b571e <unknown>\n#14 0x563cf1368cb8 <unknown>\n#15 0x563cf136cbf0 <unknown>\n#16 0x563cf137719c <unknown>\n#17 0x563cf136d808 <unknown>\n#18 0x563cf133a27f <unknown>\n#19 0x563cf1391e88 <unknown>\n#20 0x563cf1392059 <unknown>\n#21 0x563cf13a2843 <unknown>\n#22 0x7fd75d894b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/small_test_task_from_ritm/small_test_task_from_ritm/tests/test_live.py\", line 12, in test_result_selected_checkbox\n    result = test_page.checked_checkbox()\n  File \"/home/runner/work/small_test_task_from_ritm/small_test_task_from_ritm/page/page_live_code.py\", line 14, in checked_checkbox\n    self.element_is_visible(self.locators.ELEMENTS).click()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Open page: https://demoqa.com/","time":{"start":1696752482037,"stop":1696752484394,"duration":2357},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click Elements","time":{"start":1696752484394,"stop":1696752485641,"duration":1247},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h5>...</h5> is not clickable at point (198, 588). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://287cfdd9f8423693b960cf9672f1347f.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" role=\"region\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x563cf13a36b3 <unknown>\n#1 0x563cf10791e7 <unknown>\n#2 0x563cf10c665d <unknown>\n#3 0x563cf10c49fd <unknown>\n#4 0x563cf10c27b8 <unknown>\n#5 0x563cf10c1827 <unknown>\n#6 0x563cf10b64f9 <unknown>\n#7 0x563cf10e20c2 <unknown>\n#8 0x563cf10b5f16 <unknown>\n#9 0x563cf10e228e <unknown>\n#10 0x563cf10fb322 <unknown>\n#11 0x563cf10e1e93 <unknown>\n#12 0x563cf10b4934 <unknown>\n#13 0x563cf10b571e <unknown>\n#14 0x563cf1368cb8 <unknown>\n#15 0x563cf136cbf0 <unknown>\n#16 0x563cf137719c <unknown>\n#17 0x563cf136d808 <unknown>\n#18 0x563cf133a27f <unknown>\n#19 0x563cf1391e88 <unknown>\n#20 0x563cf1392059 <unknown>\n#21 0x563cf13a2843 <unknown>\n#22 0x7fd75d894b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/small_test_task_from_ritm/small_test_task_from_ritm/page/page_live_code.py\", line 14, in checked_checkbox\n    self.element_is_visible(self.locators.ELEMENTS).click()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check element is visible ('xpath', \"//h5[.='Elements']\")","time":{"start":1696752484394,"stop":1696752484430,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef4c8f5b7ac89ba4ebd0bd214e656812\")>"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"35f333834483370e","name":"log","source":"35f333834483370e.txt","type":"text/plain","size":361},{"uid":"f16a834c452676a7","name":"stdout","source":"f16a834c452676a7.txt","type":"text/plain","size":13}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1696752485714,"stop":1696752485853,"duration":139},"status":"passed","steps":[],"attachments":[{"uid":"6d8884bfd304cfb7","name":"Screenshot 2023-10-08 08:08:05.793813","source":"6d8884bfd304cfb7.png","type":"image/png","size":78884}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"labels":[{"name":"feature","value":"Test Live Code"},{"name":"suite","value":"Live Code"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestLiveCode"},{"name":"host","value":"fv-az1114-899"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_live"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e49abc48912d7c01.json","parameterValues":[]}